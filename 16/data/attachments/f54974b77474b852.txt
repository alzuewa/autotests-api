INFO     HTTP_LOGGER:event_hooks.py:27 Send POST request to http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:35 Got response: 200, reason: OK from http://localhost:8000/api/v1/users
INFO     SWAGGER_COVERAGE_TRACKER_STORAGE:storage.py:34 Results directory does not exist, creating: /home/runner/work/autotests-api/autotests-api/coverage-results
INFO     HTTP_LOGGER:event_hooks.py:27 Send POST request to http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:35 Got response: 200, reason: OK from http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:27 Send POST request to http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:35 Got response: 200, reason: OK from http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:27 Send POST request to http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:35 Got response: 200, reason: OK from http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:27 Send GET request to http://localhost:8000/api/v1/courses?userId=4a6bb077-0b86-4019-9e3f-476e187eebbd
INFO     HTTP_LOGGER:event_hooks.py:35 Got response: 200, reason: OK from http://localhost:8000/api/v1/courses?userId=4a6bb077-0b86-4019-9e3f-476e187eebbd
INFO     BASE_ASSERTIONS:base.py:19 Check that response status code equals 200
INFO     COURSES_ASSERTIONS:courses.py:53 Check get courses response
INFO     BASE_ASSERTIONS:base.py:74 Check that "courses's" length equals 1
INFO     COURSES_ASSERTIONS:courses.py:28 Check course
INFO     BASE_ASSERTIONS:base.py:38 Check that "id" equals "6013da02-4c8c-4e8c-b84d-2e9679317d0c"
INFO     BASE_ASSERTIONS:base.py:38 Check that "title" equals "Name service small table begin operation."
INFO     BASE_ASSERTIONS:base.py:38 Check that "max_score" equals "98"
INFO     BASE_ASSERTIONS:base.py:38 Check that "min_score" equals "9"
INFO     BASE_ASSERTIONS:base.py:38 Check that "description" equals "Clearly recent memory mouth Congress here.
Goal different because of fact. Power family nice service business nice company get.
Imagine suddenly success body election new. Today class always prevent."
INFO     BASE_ASSERTIONS:base.py:38 Check that "estimated_time" equals "7 weeks"
INFO     FILES_ASSERTIONS:files.py:49 Check create file
INFO     BASE_ASSERTIONS:base.py:38 Check that "id" equals "8dc2f9f6-dd81-4d76-b916-38ff9ec79674"
INFO     BASE_ASSERTIONS:base.py:38 Check that "url" equals "http://localhost:8000/static/test_files/a3be8037-dc65-4d3a-bbf6-fc7d703388b4.jpg"
INFO     BASE_ASSERTIONS:base.py:38 Check that "filename" equals "a3be8037-dc65-4d3a-bbf6-fc7d703388b4.jpg"
INFO     BASE_ASSERTIONS:base.py:38 Check that "directory" equals "test_files"
INFO     USERS_ASSERTIONS:users.py:44 Check user
INFO     BASE_ASSERTIONS:base.py:38 Check that "id" equals "4a6bb077-0b86-4019-9e3f-476e187eebbd"
INFO     BASE_ASSERTIONS:base.py:38 Check that "email" equals "davisedward@example.net"
INFO     BASE_ASSERTIONS:base.py:38 Check that "last_name" equals "Gutierrez"
INFO     BASE_ASSERTIONS:base.py:38 Check that "first_name" equals "Sonia"
INFO     BASE_ASSERTIONS:base.py:38 Check that "middle_name" equals "Jennifer"
INFO     SCHEMA_ASSERTIONS:schema.py:20 Validate JSON schema